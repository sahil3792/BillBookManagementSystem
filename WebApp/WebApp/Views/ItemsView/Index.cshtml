@model List<Item>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Items List</title>
    <link rel="stylesheet" href="~/css/site.css" />
    <script src="~/js/download.js"></script>
</head>
<body>
    <h2>Items List</h2>   
    <div style="display:flex;justify-content:space-between">

    <div>

    @* <a href="javascript:void(0);" onclick="downloadPDF()" class="btn btn-primary">Download PDF</a> *@
    <a href="javascript:void(0);" onclick="window.print();" class="btn btn-secondary">Print</a>
    <a href="javascript:void(0);" onclick="window.print();" class="btn btn-primary">Download</a>

    <a href="javascript:void(0);" onclick="shareOnWhatsApp()" class="btn btn-success">Share on WhatsApp</a>
    </div>
    <div>

    <a asp-action="Create" class="btn btn-primary">Create New Item</a>
    </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Item Name</th>
                <th>Category</th>
                <th>Stock Quantity</th>
                <th>Unit Price</th>
                
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.ItemName</td>
                    <td>@item.ItemCategory</td>
                    <td>@item.StockQuantity</td>
                    <td>@item.UnitPrice</td>
                    <td>
                    </td>
                </tr>
            }
        </tbody>
    </table>


    <script>
        // PDF download function
        async function downloadPDF() {
            try {
                const response = await fetch('/api/CA/items/downloadpdf');
                if (response.ok) {
                    const blob = await response.blob();
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'ItemsList.pdf';
                    document.body.appendChild(a);
                    a.click();
                    a.remove();
                    alert('PDF Successfully Downloaded!');
                } else {
                    alert('Error downloading PDF.');
                }
            } catch (error) {
                console.error('Download failed:', error);
                alert('An error occurred while downloading PDF.');
            }
        }

        // Excel download function
        async function downloadExcel() {
            try {
                const response = await fetch('/api/CA/items/downloadexcel');
                if (response.ok) {
                    const blob = await response.blob();
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'ItemsList.xlsx';
                    document.body.appendChild(a);
                    a.click();
                    a.remove();
                    alert('Excel Successfully Downloaded!');
                } else {
                    alert('Error downloading Excel.');
                }
            } catch (error) {
                console.error('Download failed:', error);
                alert('An error occurred while downloading Excel.');
            }
        }

        function shareOnWhatsApp() {
            const message = 'Check out this Items List: ';
            const url = window.location.href; // Current page URL
            const whatsappUrl = `https://api.whatsapp.com/send?text=${encodeURIComponent(message + url)}`;
            window.open(whatsappUrl, '_blank');
        }
    </script>
</body>
</html>
